#!/bin/bash -x

# Enable debugging mode
set -x

# Set unlimited stack size
ulimit -s unlimited
ulimit -a

# Define directories and set environment variables
src_dir="/work/noaa/da/eliu/HERCULES/EMC-bufr-query/bufr-query"
export LD_LIBRARY_PATH="${src_dir}/build/lib:${LD_LIBRARY_PATH}"
export PYTHONPATH="${PYTHONPATH}:${src_dir}/build/lib/python3.10/site-packages"
export PYTHONPATH="${PYTHONPATH}:/work/noaa/da/eliu/HERCULES/EMC-wxflow/wxflow/src"

# Date and processor count
cdate="2021080100"
nproc="$1"

# Extract year, month, day, and hour
y4="${cdate:0:4}"
m2="${cdate:4:2}"
d2="${cdate:6:2}"
h2="${cdate:8:2}"

# Define working, input, and output directories
work_dir="$PWD"
out_dir="${work_dir}/testoutput/${cdate}/script_backend_mpi${nproc}"
in_dir="${work_dir}/testinput/${cdate}"

# File paths
mapping_file="${work_dir}/bufr2ioda_satwind_amv_goes_mapping.yaml"
input_file="${in_dir}/gdas.t${h2}z.satwnd.tm00.bufr_d"
output_file="${out_dir}/gdas.t${h2}z.satwind_abi_{splits/satId}.tm00.nc"

# Create output directory with specific permissions
mkdir -p -m770 "$out_dir"

# Run the Python script
if [[ "$nproc" == "0" ]]; then
   echo Run Python script without MPI ...
   python bufr2ioda_satwind_amv_goes.py -m "$mapping_file" -o "$output_file" -i "$input_file"
else
   echo Run Python script with MPI ${nproc} ...
   srun -n "$nproc" --time 00:30:00 --mem 96G python bufr2ioda_satwind_amv_goes.py -m "$mapping_file" -o "$output_file" -i "$input_file"
fi


